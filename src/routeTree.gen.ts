/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as privateIndexRouteImport } from './routes/(private)/index'
import { Route as publicSignupRouteImport } from './routes/(public)/signup'
import { Route as publicSigninRouteImport } from './routes/(public)/signin'
import { Route as privateAboutRouteImport } from './routes/(private)/about'

const privateIndexRoute = privateIndexRouteImport.update({
  id: '/(private)/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const publicSignupRoute = publicSignupRouteImport.update({
  id: '/(public)/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const publicSigninRoute = publicSigninRouteImport.update({
  id: '/(public)/signin',
  path: '/signin',
  getParentRoute: () => rootRouteImport,
} as any)
const privateAboutRoute = privateAboutRouteImport.update({
  id: '/(private)/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/about': typeof privateAboutRoute
  '/signin': typeof publicSigninRoute
  '/signup': typeof publicSignupRoute
  '/': typeof privateIndexRoute
}
export interface FileRoutesByTo {
  '/about': typeof privateAboutRoute
  '/signin': typeof publicSigninRoute
  '/signup': typeof publicSignupRoute
  '/': typeof privateIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/(private)/about': typeof privateAboutRoute
  '/(public)/signin': typeof publicSigninRoute
  '/(public)/signup': typeof publicSignupRoute
  '/(private)/': typeof privateIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/about' | '/signin' | '/signup' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/about' | '/signin' | '/signup' | '/'
  id:
    | '__root__'
    | '/(private)/about'
    | '/(public)/signin'
    | '/(public)/signup'
    | '/(private)/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  privateAboutRoute: typeof privateAboutRoute
  publicSigninRoute: typeof publicSigninRoute
  publicSignupRoute: typeof publicSignupRoute
  privateIndexRoute: typeof privateIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(private)/': {
      id: '/(private)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof privateIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(public)/signup': {
      id: '/(public)/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof publicSignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(public)/signin': {
      id: '/(public)/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof publicSigninRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(private)/about': {
      id: '/(private)/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof privateAboutRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  privateAboutRoute: privateAboutRoute,
  publicSigninRoute: publicSigninRoute,
  publicSignupRoute: publicSignupRoute,
  privateIndexRoute: privateIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
